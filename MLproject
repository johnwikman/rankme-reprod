name: rankme-reprod
conda_env: configs/condaenv-cpu.yaml

entry_points:
  main:
    parameters:
      verbosity: {type: int, default: 0}
      logfile: {type: string, default: "logs/rankme.log"}
      dataset_dir: {type: string, default: "_datasets"}
      model_dir: {type: string, default: "_models"}
      trainer: {type: string, default: "simclr"}
      dataset: {type: string, default: "cifar10"}
      eval_dataset: {type: string, default: "cifar10"}
      model: {type: string, default: "resnet18"}
      device: string
      featdim: {type: int, default: 128}
      workers: {type: int, default: 8}
      #quiet: {type: string, default: "True"}
      # fp16_precision: {type: string, default: "false"} # workaround...
      temperature: {type: float, default: 0.07}
      sim_coeff: {type: float, default: 25.0}
      std_coeff: {type: float, default: 25.0}
      cov_coeff: {type: float, default: 1.0}
      batch_size: {type: int, default: 64}
      lr: {type: float, default: 0.1}
      epochs: {type: int, default: 10}
      weight_decay: {type: float, default: 1e-6}
      # target rank loss parameters
      use_target_rank: {type: int, default: 0}
      target_rank: {type: float, default: 384}
      target_rank_logalpha: {type: float, default: -1.6}
      target_rank_lr: {type: float, default: 3e-4}
      trl_dataset: {type: string, default: "cifar100"}
    command: "python pretraining.py -v {verbosity} --logfile={logfile} --dataset-dir={dataset_dir} --model-dir={model_dir} --trainer={trainer} --dataset={dataset} --eval-dataset={eval_dataset} --model={model} --device={device} --feat-dim={featdim} -j {workers} --temperature={temperature} --sim-coeff={sim_coeff} --std-coeff={std_coeff} --cov-coeff={cov_coeff} --batch-size={batch_size} --learning-rate={lr} --epochs={epochs} --weight-decay={weight_decay}
    --trl-dataset={trl_dataset} --use-target-rank={use_target_rank} --target-rank={target_rank}
    --target-rank-logalpha={target_rank_logalpha} --target-rank-lr={target_rank_lr}"
